<?xml version="1.0" encoding="UTF-8"?>
<valuePackConfiguration xmlns="http://hp.com/uca/expert/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	name="__PROJECT_NAME__" version="__PROJECT_VERSION__">
	
	
	<scenarios>
		<scenario name="com.hp.uca.expert.vp.pd.ProblemDetection">
			<actionRetractedAutomaticallyWhenCompleted>true</actionRetractedAutomaticallyWhenCompleted>
			<alarmEligibilityPolicy><![CDATA[(ProblemState == "HANDLED") || (  ProblemState == "NOT_HANDLED"  && (OperatorState != "TERMINATED" && NetworkState != "CLEARED") )]]></alarmEligibilityPolicy>
			<asyncActionPeriod>1000</asyncActionPeriod>
			<clockTypeMode>NORMAL</clockTypeMode>
			
			<filterFiles>
				<filterFile>src/main/resources/valuepack/pd/ProblemDetection_filters.xml</filterFile>
				<filterFile>src/main/resources/valuepack/pd/Library_WMTest_filter.xml</filterFile>
			</filterFiles>
			
			<filterTagsFile>src/main/resources/valuepack/pd/ProblemDetection_filtersTags.xml</filterTagsFile>
	        <mapperFile>src/main/resources/valuepack/pd/ProblemDetection_mappers.xml</mapperFile>
			<fireAllRulePeriod>1000</fireAllRulePeriod>
			<fireAllRulesDuringResynchronization>false</fireAllRulesDuringResynchronization>
			<fireAllRulesPolicy>WATCHDOG</fireAllRulesPolicy>
			<globals></globals>
			<processingMode>CLOUD</processingMode>
			<rulesFiles>
				<rulesFile>
					<filename>file:./src/main/resources/valuepack/pd/ProblemDetection_Rules.pkg</filename>
					<name>Problem Detection Rules</name>
					<ruleFileType>PKG</ruleFileType>
				</rulesFile>
			</rulesFiles>
			<tickPeriod>30000</tickPeriod>			
				<customLifeCycleClass>com.hp.uca.expert.vp.pd.im.lifecycle.InferenceMachineLifeCycleExtended</customLifeCycleClass>				
			<customInitializationClass>com.hp.uca.expert.vp.pd.core.PD_Initialization</customInitializationClass>
			<compressionMode>true</compressionMode>
			<compressionPeriod>1000</compressionPeriod>
		</scenario>
		<!-- 
		<scenario name="com.hp.uca.expert.vp.tp.TopologyPropagation">
			<actionRetractedAutomaticallyWhenCompleted>true</actionRetractedAutomaticallyWhenCompleted>
			<alarmEligibilityPolicy><![CDATA[(ProblemState == "HANDLED") || (  ProblemState == "NOT_HANDLED"  && (OperatorState != "TERMINATED" && NetworkState != "CLEARED") )]]></alarmEligibilityPolicy>
			<asyncActionPeriod>1000</asyncActionPeriod>
			<clockTypeMode>NORMAL</clockTypeMode>
			<eligibleForBroadcast>true</eligibleForBroadcast>
			<filterFile>src/main/resources/valuepack/tp/TopologyPropagation_filters.xml</filterFile>
			<filterTagsFile>src/main/resources/valuepack/tp/TopologyPropagation_filtersTags.xml</filterTagsFile>		
	        <mapperFile>src/main/resources/valuepack/tp/TopologyPropagation_mappers.xml</mapperFile>
			<fireAllRulePeriod>1000</fireAllRulePeriod>
			<fireAllRulesDuringResynchronization>false</fireAllRulesDuringResynchronization>
			<fireAllRulesPolicy>EACH_ACCESS</fireAllRulesPolicy>
			<globals></globals>
			<processingMode>CLOUD</processingMode>
			<rulesFiles>
				<rulesFile>
					<filename>file:./src/main/resources/valuepack/tp/TopologyPropagation_Rules.pkg</filename>
					<name>Topology Propagation Rules</name>
					<ruleFileType>PKG</ruleFileType>
				</rulesFile>
			</rulesFiles>
			<tickPeriod>30000</tickPeriod>
			<customLifeCycleClass>com.hp.uca.expert.vp.tp.im.lifecycle.InferenceMachineLifeCycleExtended</customLifeCycleClass>				
			<customInitializationClass>com.hp.uca.expert.vp.tp.core.TP_Initialization</customInitializationClass>
			<compressionMode>false</compressionMode>
			<compressionPeriod>1000</compressionPeriod>
		</scenario>
		 -->
		 
	</scenarios>
	<mediationFlows >
		<mediationFlow name="temipFlow" actionReference="TeMIP_FlowManagement" flowNameKey="flowName" lastEventReceivedFirstDuringResynchronization="true">
			<!-- Comment out the flowCreation and flowDeletion sections to use static flows
	         instead of dynamic flows -->
			<flowCreation>
				<actionParameter>
					<key>operation</key>
					<value>CreateFlow</value>
				</actionParameter>
				<actionParameter>
					<key>flowType</key>
					<value>dynamic</value><!-- flowType can only be dynamic in the case of flowCreation -->
				</actionParameter>				
				<actionParameter>
					<key>operationContext</key>
					<value>.oc.raw</value>
				</actionParameter>
				<actionParameter>
					<key>operationContext</key>
					<value>.oc.prbtx</value>
				</actionParameter>
			</flowCreation>
			<flowDeletion>
				<actionParameter>
					<key>operation</key>
					<value>DeleteFlow</value>
				</actionParameter>
				<actionParameter>
					<key>flowType</key>
					<value>dynamic</value><!-- flowType can only be dynamic in the case of flowDeletion -->
				</actionParameter>
			</flowDeletion>
			<flowResynchronization>
				<actionParameter>
					<key>operation</key>
					<value>ResynchFlow</value>
				</actionParameter>
				<actionParameter>
					<key>flowType</key>
					<value>dynamic</value><!-- flowType can be either static or dynamic -->
				</actionParameter>
			</flowResynchronization>
			<flowStatus>
				<actionParameter>
					<key>operation</key>
					<value>StatusFlow</value>
				</actionParameter>
				<actionParameter>
					<key>flowType</key>
					<value>dynamic</value><!-- flowType can be either static or dynamic -->
				</actionParameter>
			</flowStatus>
		</mediationFlow>
	</mediationFlows>
<!-- 	<dbFlows> -->
<!-- 		<dbFlow name="scenarioDBFlow"  dbNotifierName="dbNotifier"  sourceIdentifier="PitDB"  lastEventReceivedFirstDuringResynchronization="false" /> -->
<!-- 	</dbFlows> -->
</valuePackConfiguration>
